/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package asm_jv3.view;

import Model.Account;
import Model.Category;
import Model.SmartPhone;
import Service.QLSPService;
import Service_IMPL.QLSPServiceIMPL;
import Util.HashPass;
import Util.Uhelper;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chung
 */
public final class ASM extends javax.swing.JFrame {

    DefaultComboBoxModel cboModel;
    DefaultComboBoxModel cboModelPMCategoryID;
    DefaultComboBoxModel cboModelPMName;
    DefaultComboBoxModel cboModelUPCategoryID;
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel modelPM = new DefaultTableModel();
    DefaultTableModel modelUP = new DefaultTableModel();
    QLSPService QLSPV = new QLSPServiceIMPL();
    int index = -1, id, x = 0;

    /**
     * Creates new form ASM
     */
    public ASM() {
        initComponents();
        setLocationRelativeTo(null);
        getCBODisplay(QLSPV.getCBODisplay());
        loadDataDisplay(QLSPV.getListStocker());
        getCBOPMCategoryID(QLSPV.getCBODisplay());
        getCBOPMName(QLSPV.getCBOPM());
        loadDataUP(QLSPV.getListUP());
        getCBOUP(QLSPV.getCBODisplay());
        hashPass();
    }

    public void getCBOUP(ArrayList<Category> lstC) {
        cboModelUPCategoryID = (DefaultComboBoxModel) cboUPcateID.getModel();
        for (Category c : lstC) {
            cboModelUPCategoryID.addElement(c.getId());
        }
    }

    public void getCBODisplay(ArrayList<Category> lstC) {
        cboModel = (DefaultComboBoxModel) cboDisplayName.getModel();
        for (Category c : lstC) {
            cboModel.addElement(c.getName());
        }
    }

    public void getCBOPMCategoryID(ArrayList<Category> lstsp) {
        cboModelPMCategoryID = (DefaultComboBoxModel) cboPMcategoryID.getModel();
        for (Category c : lstsp) {
            cboModelPMCategoryID.addElement(c.getId());
        }
    }

    public void getCBOPMName(ArrayList<SmartPhone> lstsp) {
        cboModelPMName = (DefaultComboBoxModel) cboPMname.getModel();
        for (SmartPhone sp : lstsp) {
            cboModelPMName.addElement(sp.getName());
        }
    }

    public void showStocker() {
        SmartPhone s = QLSPV.getListStocker().get(index);
        cboDisplayName.setSelectedItem(s.getName() + "");
        tblDisplay.setRowSelectionInterval(index, index);
    }

    public void loadDataUP(ArrayList<SmartPhone> lstPM) {
        modelUP = (DefaultTableModel) tblUP.getModel();
        modelUP.setRowCount(0);
        for (SmartPhone smartPhone : lstPM) {
            modelUP.addRow(new Object[]{smartPhone.getID(), smartPhone.getName(), smartPhone.getCurrentPrice()});
        }
        modelUP.fireTableDataChanged();
    }

    public void loadDataPM(ArrayList<SmartPhone> lstPM) {
        modelPM = (DefaultTableModel) tblPM.getModel();
        modelPM.setRowCount(0);
        for (SmartPhone smartPhone : lstPM) {
            modelPM.addRow(new Object[]{smartPhone.getID(), smartPhone.getName(), smartPhone.getQuantity(), smartPhone.getCurrentPrice()});
        }
        modelPM.fireTableDataChanged();
    }

    public void loadDataDisplay(ArrayList<SmartPhone> lstS) {
        model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);
        for (SmartPhone lst : QLSPV.getListStocker()) {
            model.addRow(new Object[]{lst.getID(), lst.getName(), lst.getQuantity()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        tbpMain = new javax.swing.JTabbedPane();
        pnlUpdate = new javax.swing.JPanel();
        lblUPTT = new javax.swing.JLabel();
        lblUPName = new javax.swing.JLabel();
        cboUPcateID = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUP = new javax.swing.JTable();
        btnUPPrice = new javax.swing.JButton();
        pnlPM = new javax.swing.JPanel();
        lblPMTT = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPM = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        cboPMname = new javax.swing.JComboBox<>();
        cboPMcategoryID = new javax.swing.JComboBox<>();
        lblPMName = new javax.swing.JLabel();
        lblPMCategoryID = new javax.swing.JLabel();
        btnPMFind = new javax.swing.JButton();
        pnlPrint = new javax.swing.JPanel();
        lblDisplayTT = new javax.swing.JLabel();
        lblDisplayName = new javax.swing.JLabel();
        cboDisplayName = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        pnlLogin = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        lblLoginTT = new javax.swing.JLabel();
        lblLoginUser = new javax.swing.JLabel();
        txtLoginUser = new javax.swing.JTextField();
        lblLoginPass = new javax.swing.JLabel();
        txtLoginPass = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        tbpMain.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tbpMainComponentShown(evt);
            }
        });

        lblUPTT.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblUPTT.setText("Update Price");

        lblUPName.setText("Category ID");

        cboUPcateID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUPcateIDActionPerformed(evt);
            }
        });

        tblUP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Current Price"
            }
        ));
        jScrollPane2.setViewportView(tblUP);

        btnUPPrice.setText("updat price");
        btnUPPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUpdateLayout = new javax.swing.GroupLayout(pnlUpdate);
        pnlUpdate.setLayout(pnlUpdateLayout);
        pnlUpdateLayout.setHorizontalGroup(
            pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlUpdateLayout.createSequentialGroup()
                        .addComponent(lblUPName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUPTT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboUPcateID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addComponent(btnUPPrice)
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlUpdateLayout.setVerticalGroup(
            pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUPTT, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(pnlUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboUPcateID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUPName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUPPrice))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pnlUpdateLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnUPPrice, cboUPcateID, lblUPName});

        tbpMain.addTab("Update Price", pnlUpdate);

        lblPMTT.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblPMTT.setText("Product Management");

        tblPM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Quantity", "Price"
            }
        ));
        tblPM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPMMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPM);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        cboPMname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPMnameActionPerformed(evt);
            }
        });

        cboPMcategoryID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPMcategoryIDActionPerformed(evt);
            }
        });

        lblPMName.setText("Name");

        lblPMCategoryID.setText("Category ID");

        btnPMFind.setText("Find");
        btnPMFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPMFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPMLayout = new javax.swing.GroupLayout(pnlPM);
        pnlPM.setLayout(pnlPMLayout);
        pnlPMLayout.setHorizontalGroup(
            pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPMLayout.createSequentialGroup()
                .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPMLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(pnlPMLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlPMLayout.createSequentialGroup()
                                        .addComponent(lblPMName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblPMCategoryID))
                                    .addGroup(pnlPMLayout.createSequentialGroup()
                                        .addComponent(cboPMname, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboPMcategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblPMTT))
                                .addGap(0, 73, Short.MAX_VALUE))))
                    .addGroup(pnlPMLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnPMFind)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlPMLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDel, btnPMFind, btnUpdate});

        pnlPMLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboPMcategoryID, cboPMname, lblPMCategoryID, lblPMName});

        pnlPMLayout.setVerticalGroup(
            pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPMTT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPMName)
                    .addComponent(lblPMCategoryID))
                .addGap(18, 18, 18)
                .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboPMcategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(btnDel)
                    .addComponent(btnPMFind))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pnlPMLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDel, btnPMFind, btnUpdate});

        pnlPMLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboPMcategoryID, cboPMname, lblPMCategoryID, lblPMName});

        tbpMain.addTab("Management", pnlPM);

        lblDisplayTT.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDisplayTT.setText("Display");

        lblDisplayName.setText("Name");

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Quantity"
            }
        ));
        tblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplay);

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrintLayout = new javax.swing.GroupLayout(pnlPrint);
        pnlPrint.setLayout(pnlPrintLayout);
        pnlPrintLayout.setHorizontalGroup(
            pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrintLayout.createSequentialGroup()
                .addGroup(pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrintLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlPrintLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(lblDisplayTT)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrintLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(lblDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImport)
                .addContainerGap())
        );
        pnlPrintLayout.setVerticalGroup(
            pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrintLayout.createSequentialGroup()
                .addComponent(lblDisplayTT, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExport)
                    .addComponent(btnImport))
                .addGap(0, 41, Short.MAX_VALUE))
        );

        pnlPrintLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboDisplayName, lblDisplayName});

        tbpMain.addTab("Print", pnlPrint);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tbpMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tbpMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(pnlMain, "card4");

        btnExit.setText("exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblLoginTT.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblLoginTT.setText("Sign In");

        lblLoginUser.setText("User name:");

        lblLoginPass.setText("Passwrod");

        txtLoginPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginPassActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(lblLoginTT, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLoginPass, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLoginPass)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoginTT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLoginPass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoginPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        getContentPane().add(pnlLogin, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        QLSPV.exit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:

        if (valuesDate()) {
            String name = txtLoginUser.getText();
            String pass = txtLoginPass.getText();
            if (QLSPV.checkRole(name, pass) != -1) {
                pnlLogin.setVisible(false);
                pnlMain.setVisible(true);
                if (QLSPV.checkRole(name, pass) == 0) {
                    pnlPM.setEnabled(true);
                    pnlPrint.setEnabled(true);
                    pnlUpdate.setEnabled(true);
                } else if (QLSPV.checkRole(name, pass) == 1) {
                    tbpMain.remove(pnlPrint);
                    tbpMain.remove(pnlUpdate);
                } else if (QLSPV.checkRole(name, pass) == 2) {
                    tbpMain.remove(pnlPM);
                    tbpMain.remove(pnlUpdate);
                    pnlUpdate.setVisible(false);
                } else if (QLSPV.checkRole(name, pass) == 3) {
                    tbpMain.remove(pnlPM);
                    tbpMain.remove(pnlPrint);
                }
            } else {
                JOptionPane.showMessageDialog(this, QLSPV.login(name, pass));
                txtLoginUser.setText("");
                txtLoginPass.setText("");
                tbpMain.setVisible(false);
            }
        }


    }//GEN-LAST:event_btnLoginActionPerformed

    private void tblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayMouseClicked
        // TODO add your handling code here:

        index = tblDisplay.getSelectedRow();
        showStocker();


    }//GEN-LAST:event_tblDisplayMouseClicked

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        index = tblDisplay.getSelectedRow();
        int sl;
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select the product you want to import");
        } else {
            try {
                sl = Integer.parseInt(JOptionPane.showInputDialog("enter the quantity"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Quantity is number");
                return;
            }
            if (sl > 0) {
                SmartPhone sp = QLSPV.getListStocker().get(index);
                id = sp.getID();
                JOptionPane.showMessageDialog(this, QLSPV.importStocker(id, sl));
                loadDataDisplay(QLSPV.getListStocker());
            } else {
                JOptionPane.showMessageDialog(this, "quantity must be than 0");
                return;
            }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        index = tblDisplay.getSelectedRow();
        int sl;
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select the product you want to export");
        } else {
            try {
                sl = Integer.parseInt(JOptionPane.showInputDialog("enter the quantity"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Quantity is number");
                return;
            }
            if (sl > 0) {
                SmartPhone sp = QLSPV.getListStocker().get(index);
                id = sp.getID();
                JOptionPane.showMessageDialog(this, QLSPV.exportStocker(id, sl));
                loadDataDisplay(QLSPV.getListStocker());
            } else {
                JOptionPane.showMessageDialog(this, "quantity must be than 0");
                return;
            }
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void tblPMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPMMouseClicked
        // TODO add your handling code here:
        index = tblPM.getSelectedRow();
    }//GEN-LAST:event_tblPMMouseClicked

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        int id;
        try {
            id = Integer.parseInt(JOptionPane.showInputDialog("enter id"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "id must be number");
            return;
        }
        int check = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete?", "warning", JOptionPane.YES_OPTION);
        if (check == JOptionPane.YES_OPTION) {
            if (QLSPV.findById(id)) {
                JOptionPane.showMessageDialog(this, QLSPV.deletePRD(id));
            } else {
                JOptionPane.showMessageDialog(this, "not found product");

            }
        } else {
            return;
        }
        loadDataPM(QLSPV.getListPM());
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        new Addprd(this).setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        new Updateprd(this).setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnPMFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPMFindActionPerformed
        // TODO add your handling code here:
        if (x == 0) {
            id = (int) cboPMcategoryID.getSelectedItem();
            String name = (String) cboPMname.getSelectedItem();
            loadDataPM(QLSPV.find(id, name));
            x = 1;
        } else {
            loadDataPM(QLSPV.getListPM());
            x = 0;
        }

    }//GEN-LAST:event_btnPMFindActionPerformed

    private void cboPMnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPMnameActionPerformed
        // TODO add your handling code here


    }//GEN-LAST:event_cboPMnameActionPerformed

    private void cboPMcategoryIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPMcategoryIDActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_cboPMcategoryIDActionPerformed

    private void cboUPcateIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUPcateIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUPcateIDActionPerformed

    private void tbpMainComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tbpMainComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_tbpMainComponentShown

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadDataPM(QLSPV.getListPM());
        HashPass.hashPassword(txtLoginPass.getText());
    }//GEN-LAST:event_formWindowOpened

    private void btnUPPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPPriceActionPerformed
        // TODO add your handling code here:
        index = tblUP.getSelectedRow();
        double price = 0;
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select the product you want to changed");
        } else {
            try {

                price = Double.parseDouble(JOptionPane.showInputDialog("enter the price"));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "price is number");
                return;
            }
            if (price > 0) {
                SmartPhone sp = QLSPV.getListUP().get(index);
                id = sp.getID();
                JOptionPane.showMessageDialog(this, QLSPV.UpdatePrice(id, price));
                loadDataUP(QLSPV.getListUP());
            } else {
                JOptionPane.showMessageDialog(this, "price must be than 0");
                return;
            }
        }
    }//GEN-LAST:event_btnUPPriceActionPerformed

    private void txtLoginPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoginPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoginPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ASM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnPMFind;
    private javax.swing.JButton btnUPPrice;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboDisplayName;
    private javax.swing.JComboBox<String> cboPMcategoryID;
    private javax.swing.JComboBox<String> cboPMname;
    private javax.swing.JComboBox<String> cboUPcateID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDisplayName;
    private javax.swing.JLabel lblDisplayTT;
    private javax.swing.JLabel lblLoginPass;
    private javax.swing.JLabel lblLoginTT;
    private javax.swing.JLabel lblLoginUser;
    private javax.swing.JLabel lblPMCategoryID;
    private javax.swing.JLabel lblPMName;
    private javax.swing.JLabel lblPMTT;
    private javax.swing.JLabel lblUPName;
    private javax.swing.JLabel lblUPTT;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlPM;
    private javax.swing.JPanel pnlPrint;
    private javax.swing.JPanel pnlUpdate;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTable tblPM;
    private javax.swing.JTable tblUP;
    private javax.swing.JTabbedPane tbpMain;
    private javax.swing.JPasswordField txtLoginPass;
    private javax.swing.JTextField txtLoginUser;
    // End of variables declaration//GEN-END:variables
public boolean valuesDate() {
        if (Uhelper.CheckNull(txtLoginUser, "username is not empty")) {
            return false;
        }
        if (Uhelper.CheckNull(txtLoginPass, "password is not empty")) {
            return false;
        }
        return true;
    }
public void hashPass(){
ArrayList<Account> lstAcc = QLSPV.getListAcc();
    for (Account a : lstAcc) {
        HashPass.hashPassword(a.getPass());
        System.out.println(HashPass.hashPassword(a.getPass()));
    }
}
}
