/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java2_asm;

import java2_asm.model.Empolyee;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chung
 */
public class ASM extends javax.swing.JFrame {

    int index = -1;
    DefaultTableModel model;

    List<Empolyee> lstNV = new ArrayList<>();

    /**
     * Creates new form NewJFrame
     */
    public ASM() {
        initComponents();
        setLocationRelativeTo(null);
        model = (DefaultTableModel) tblNV.getModel();
        getTime();
        if (lstNV.size() > 0) {

            fillToForm(0);
            fillToTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblSalry = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblHour = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnFirst = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblStep = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNV = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ NHÂN VIÊN");
        setBackground(new java.awt.Color(255, 153, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setText("QUẢN LÝ NHÂN VIÊN");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("HỌ VÀ TÊN");
        lblName.setToolTipText("");

        lblID.setText("MÃ NHÂN VIÊN");

        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge.setText("TUỔI");
        lblAge.setToolTipText("");

        lblSalry.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSalry.setText("LƯƠNG");
        lblSalry.setToolTipText("");

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText("EMAIL");
        lblEmail.setToolTipText("");

        lblHour.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHour.setForeground(new java.awt.Color(255, 0, 0));
        lblHour.setText("21:07 AM");

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPre.setText("<<");
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblStep.setForeground(new java.awt.Color(255, 0, 0));
        lblStep.setText("Record 1 of 10");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        tblNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNV);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSalry, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblStep))
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(txtEmail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnFind, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnOpen, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblHour, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(16, 16, 16))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnExit, btnFind, btnNew, btnOpen, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHour, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalry, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpen))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst)
                            .addComponent(btnPre)
                            .addComponent(btnNext)
                            .addComponent(btnLast)
                            .addComponent(lblStep, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnExit, btnFind, btnNew, btnOpen, btnSave});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int check = 0;
        for (int i = 0; i < lstNV.size(); i++) {
            if (lstNV.get(i).getId().equalsIgnoreCase(txtID.getText())) {
                check = 1;
                break;
            }

        }
        if (check == 1) {
            update();
            index = tblNV.getSelectedRow();
        } else {
            add();
            index = lstNV.size() - 1;
            fillToForm(index);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        xoa();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clear();

    }//GEN-LAST:event_btnNewActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lstNV.add(new Empolyee("id1", "chung", 20, "chung@123.com", 12360480));
        lstNV.add(new Empolyee("id2", "dũng", 28, "dung@123.com", 15360480));
        lstNV.add(new Empolyee("id3", "hoàng", 40, "hoang@123.com", 10360480));
        lstNV.add(new Empolyee("id4", "tới", 35, "toi@123.com", 8360480));

        fillToTable();
    }//GEN-LAST:event_formWindowOpened

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        wriFile();
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        if (findByID(txtID.getText()) == null) {
            JOptionPane.showMessageDialog(this, "khong tim thay");
        } else {
            fillToForm(findByID(txtID.getText()));
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void tblNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNVMouseClicked
        index = tblNV.getSelectedRow();
        fillToForm(index);
        lblStep.setText(getInfoRecord());
    }//GEN-LAST:event_tblNVMouseClicked

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        readFile();
    }//GEN-LAST:event_btnOpenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ASM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ASM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSalry;
    private javax.swing.JLabel lblStep;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblNV;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        txtAge.setText("");
        txtEmail.setText("");
        txtID.setText("");
        txtName.setText("");
        txtSalary.setText("");
        index = -1;
    }

    private void add() {
        try {
            if (isrequired()) {
                String id = txtID.getText();
                String name = txtName.getText();
                String mail = txtEmail.getText();
                int age = Integer.parseInt(txtAge.getText());
                double salary = Double.parseDouble(txtSalary.getText());
                Empolyee nv = new Empolyee(id, name, age, mail, salary);

                lstNV.add(nv);
                model.addRow(new Object[]{id, name, age, mail, salary});
                JOptionPane.showMessageDialog(this, "da them");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi them");
        }
    }

    public boolean isrequired() {
        if (Uhelper.CheckNull(txtID, "id khong duoc de trong")) {
            return false;
        }
        if (Uhelper.CheckNull(txtName, "name khong duoc de trong")) {
            return false;
        }
        if (Uhelper.CheckNull(txtEmail, "email khong duoc de trong")) {
            return false;
        }
        if (Uhelper.CheckNull(txtSalary, "salary khong duoc de trong")) {
            return false;
        }
        if (Uhelper.CheckNull(txtAge, "age khong duoc de trong")) {
            return false;
        }
        if (Uhelper.checkAge(txtAge, "tuoi phai la so")) {
            return false;
        }
        if (Uhelper.checkDomain(txtAge, "tuoi tu 16 den 55")) {
            return false;
        }
        if (Uhelper.checkSalary(txtSalary, "luong phai la so")) {
            return false;
        }
        if (Uhelper.checkDomain2(txtSalary, "luong phai tren 5.000.000")) {
            return false;
        }
        if (Uhelper.checkEmail(txtEmail, "email khong dung dinh dang")) {
            return false;
        }
        return true;
    }

    public Empolyee getInfo() {
        return new Empolyee(txtID.getText(), txtName.getText(), Integer.parseInt(txtAge.getText()), txtEmail.getText(),
                Double.parseDouble(txtSalary.getText()));
    }

    private void xoa() {
        try {
            int alterbtn = JOptionPane.showConfirmDialog(null, "ban co chac chan muon xoa khong ?", "canh bao", JOptionPane.YES_OPTION);
            if (alterbtn == JOptionPane.YES_OPTION) {
                lstNV.remove(index);
                fillToTable();
                clear();
                JOptionPane.showMessageDialog(this, "xoa thanh cong");
            } else {
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi nut xoa");
        }
    }

    public void fillToTable() {
        model.setRowCount(0);
        for (Empolyee nv : lstNV) {
            model.addRow(new Object[]{nv.getId(), nv.getName(), nv.getAge(), nv.getEmail(), nv.getSalary()});
        }
    }

    public void updateInfo() {
        tblNV.setRowSelectionInterval(index, index);
        fillToForm(index);
        lblStep.setText(getInfoRecord());
    }

    public void fillToForm(int index) {
        txtID.setText(lstNV.get(index).getId());
        txtName.setText(lstNV.get(index).getName());
        txtAge.setText(String.valueOf(lstNV.get(index).getAge()));
        txtEmail.setText(lstNV.get(index).getEmail());
        txtSalary.setText(String.valueOf(lstNV.get(index).getSalary()));
    }

    public void fillToForm(Empolyee nv) {
        txtID.setText(nv.getId());
        txtName.setText(nv.getName());
        txtAge.setText(String.valueOf(nv.getAge()));
        txtEmail.setText(nv.getEmail());
        txtSalary.setText(String.valueOf(nv.getSalary()));

    }

    public String getInfoRecord() {
        return "Record " + (index + 1) + " of " + lstNV.size();
    }

    private void first() {
        try {
            index = 0;
            updateInfo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi di chuyen");
        }
    }

    private void last() {
        try {
            index = lstNV.size() - 1;
            updateInfo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi di chuyen");
        }
    }

    private void prev() {
        try {
            if (index == 0) {
                last();
            } else {
                index--;
            }
            updateInfo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi di chuyen");
        }
    }

    private void next() {
        try {
            if (index == lstNV.size() - 1) {
                first();
            } else {
                index++;
            }
            updateInfo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi di chuyen");
        }
    }

    public Empolyee findByID(String ID) {
        try {
            for (Empolyee nv : lstNV) {
                if (nv.getId().equalsIgnoreCase(ID)) {
                    return nv;
                }
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, "loi tim kiem");
        }
        return null;
    }

    private void update() {
        try {
            index = tblNV.getSelectedRow();
            if (isrequired()) {
                String id = txtID.getText();
                String name = txtName.getText();
                String mail = txtEmail.getText();
                int age = Integer.parseInt(txtAge.getText());
                double salary = Double.parseDouble(txtSalary.getText());
                Empolyee nv = new Empolyee(id, name, age, mail, salary);

                lstNV.set(index, nv);
                model.setValueAt(id, index, 0);
                model.setValueAt(name, index, 1);
                model.setValueAt(age, index, 2);
                model.setValueAt(mail, index, 3);
                model.setValueAt(salary, index, 4);
                fillToForm(index);
                JOptionPane.showMessageDialog(this, "update thanh cong");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi update");
        }

    }

    private void getTime() {
        Thread t = new Thread() {
            @Override
            public void run() { // sau mỗi giây lấy giờ hệ thống fomat lại theo mẫu rồi hiển thị lên lbl
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm aa");
                while (true) {
                    try {
                        Date d = new Date();//tao 1 doi tuong date lay gio theo he thong
                        lblHour.setText(sdf.format(d));
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        break;
                    }
                }
            }

        };
        t.start();
    }

    private void readFile() {
        try {

            JFileChooser fc = new JFileChooser();
            int chon = fc.showSaveDialog(this);
            if (chon == JFileChooser.APPROVE_OPTION) {
                String fileName = fc.getSelectedFile().getAbsolutePath();
                ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName));
                lstNV = (List<Empolyee>) ois.readObject();
                ois.close();
                fillToTable();
                if (lstNV.size() > 0) {
                    index = 0;
                    fillToForm(index);
                } else {
                    clear();
                }
                JOptionPane.showMessageDialog(this, "doc file thanh cong");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi doc file");
        }

//        try {
//           lstNV= (List<Empolyee>) Uhelper.readObj("asm.txt");
//            fillToTable();
//            if (lstNV.size() > 0) {
//                index = 0;
//                fillToForm(index);
//            } else {
//                clear();
//            }
//            JOptionPane.showMessageDialog(this, "doc thanh cong");
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "doc that bai");
//        }
    }

    private void wriFile() {
        try {
            JFileChooser fc = new JFileChooser();
            int chon = fc.showSaveDialog(this);
            if (chon == JFileChooser.APPROVE_OPTION) {
                String fileName = fc.getSelectedFile().getAbsolutePath();
                ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName));
                oos.writeObject(lstNV);
                oos.flush();
                oos.close();
                JOptionPane.showMessageDialog(this, "ghi file thanh cong");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "loi ghi file");
        }
// try {
//            Uhelper.wriObj("asm.txt", lstNV);
//            JOptionPane.showMessageDialog(this, "ghi thanh cong");
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "ghi that bai");
//        }
    }
}
